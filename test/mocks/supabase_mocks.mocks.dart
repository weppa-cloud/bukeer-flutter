// Mocks generated by Mockito 5.4.6 from annotations
// in bukeer/test/mocks/supabase_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:supabase/supabase.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFunctionsClient_0 extends _i1.SmartFake
    implements _i2.FunctionsClient {
  _FakeFunctionsClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseStorageClient_1 extends _i1.SmartFake
    implements _i2.SupabaseStorageClient {
  _FakeSupabaseStorageClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimeClient_2 extends _i1.SmartFake
    implements _i2.RealtimeClient {
  _FakeRealtimeClient_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestClient_3 extends _i1.SmartFake
    implements _i2.PostgrestClient {
  _FakePostgrestClient_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoTrueClient_4 extends _i1.SmartFake implements _i2.GoTrueClient {
  _FakeGoTrueClient_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseQueryBuilder_5 extends _i1.SmartFake
    implements _i2.SupabaseQueryBuilder {
  _FakeSupabaseQueryBuilder_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseQuerySchema_6 extends _i1.SmartFake
    implements _i2.SupabaseQuerySchema {
  _FakeSupabaseQuerySchema_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestFilterBuilder_7<T1> extends _i1.SmartFake
    implements _i2.PostgrestFilterBuilder<T1> {
  _FakePostgrestFilterBuilder_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimeChannel_8 extends _i1.SmartFake
    implements _i2.RealtimeChannel {
  _FakeRealtimeChannel_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestQueryBuilder_9<T> extends _i1.SmartFake
    implements _i2.PostgrestQueryBuilder<T> {
  _FakePostgrestQueryBuilder_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestTransformBuilder_10<T1> extends _i1.SmartFake
    implements _i2.PostgrestTransformBuilder<T1> {
  _FakePostgrestTransformBuilder_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponsePostgrestBuilder_11<T1, S, R> extends _i1.SmartFake
    implements _i2.ResponsePostgrestBuilder<T1, S, R> {
  _FakeResponsePostgrestBuilder_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestBuilder_12<T1, S, R> extends _i1.SmartFake
    implements _i2.PostgrestBuilder<T1, S, R> {
  _FakePostgrestBuilder_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUri_13 extends _i1.SmartFake implements Uri {
  _FakeUri_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_14<T1> extends _i1.SmartFake implements _i3.Future<T1> {
  _FakeFuture_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoTrueAdminApi_15 extends _i1.SmartFake
    implements _i2.GoTrueAdminApi {
  _FakeGoTrueAdminApi_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoTrueMFAApi_16 extends _i1.SmartFake implements _i2.GoTrueMFAApi {
  _FakeGoTrueMFAApi_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthResponse_17 extends _i1.SmartFake implements _i2.AuthResponse {
  _FakeAuthResponse_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOAuthResponse_18 extends _i1.SmartFake implements _i2.OAuthResponse {
  _FakeOAuthResponse_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthSessionUrlResponse_19 extends _i1.SmartFake
    implements _i2.AuthSessionUrlResponse {
  _FakeAuthSessionUrlResponse_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResendResponse_20 extends _i1.SmartFake
    implements _i2.ResendResponse {
  _FakeResendResponse_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserResponse_21 extends _i1.SmartFake implements _i2.UserResponse {
  _FakeUserResponse_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeObject_22 extends _i1.SmartFake implements Object {
  _FakeObject_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_23 extends _i1.SmartFake implements _i2.User {
  _FakeUser_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSession_24 extends _i1.SmartFake implements _i2.Session {
  _FakeSession_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SupabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseClient extends _i1.Mock implements _i2.SupabaseClient {
  MockSupabaseClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FunctionsClient get functions => (super.noSuchMethod(
        Invocation.getter(#functions),
        returnValue: _FakeFunctionsClient_0(
          this,
          Invocation.getter(#functions),
        ),
      ) as _i2.FunctionsClient);

  @override
  _i2.SupabaseStorageClient get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeSupabaseStorageClient_1(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i2.SupabaseStorageClient);

  @override
  _i2.RealtimeClient get realtime => (super.noSuchMethod(
        Invocation.getter(#realtime),
        returnValue: _FakeRealtimeClient_2(
          this,
          Invocation.getter(#realtime),
        ),
      ) as _i2.RealtimeClient);

  @override
  _i2.PostgrestClient get rest => (super.noSuchMethod(
        Invocation.getter(#rest),
        returnValue: _FakePostgrestClient_3(
          this,
          Invocation.getter(#rest),
        ),
      ) as _i2.PostgrestClient);

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  _i2.GoTrueClient get auth => (super.noSuchMethod(
        Invocation.getter(#auth),
        returnValue: _FakeGoTrueClient_4(
          this,
          Invocation.getter(#auth),
        ),
      ) as _i2.GoTrueClient);

  @override
  set functions(_i2.FunctionsClient? _functions) => super.noSuchMethod(
        Invocation.setter(
          #functions,
          _functions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set storage(_i2.SupabaseStorageClient? _storage) => super.noSuchMethod(
        Invocation.setter(
          #storage,
          _storage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set realtime(_i2.RealtimeClient? _realtime) => super.noSuchMethod(
        Invocation.setter(
          #realtime,
          _realtime,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set rest(_i2.PostgrestClient? _rest) => super.noSuchMethod(
        Invocation.setter(
          #rest,
          _rest,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set headers(Map<String, String>? headers) => super.noSuchMethod(
        Invocation.setter(
          #headers,
          headers,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.SupabaseQueryBuilder from(String? table) => (super.noSuchMethod(
        Invocation.method(
          #from,
          [table],
        ),
        returnValue: _FakeSupabaseQueryBuilder_5(
          this,
          Invocation.method(
            #from,
            [table],
          ),
        ),
      ) as _i2.SupabaseQueryBuilder);

  @override
  _i2.SupabaseQuerySchema schema(String? schema) => (super.noSuchMethod(
        Invocation.method(
          #schema,
          [schema],
        ),
        returnValue: _FakeSupabaseQuerySchema_6(
          this,
          Invocation.method(
            #schema,
            [schema],
          ),
        ),
      ) as _i2.SupabaseQuerySchema);

  @override
  _i2.PostgrestFilterBuilder<T> rpc<T>(
    String? fn, {
    Map<String, dynamic>? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rpc,
          [fn],
          {#params: params},
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #rpc,
            [fn],
            {#params: params},
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.RealtimeChannel channel(
    String? name, {
    _i2.RealtimeChannelConfig? opts = const _i2.RealtimeChannelConfig(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #channel,
          [name],
          {#opts: opts},
        ),
        returnValue: _FakeRealtimeChannel_8(
          this,
          Invocation.method(
            #channel,
            [name],
            {#opts: opts},
          ),
        ),
      ) as _i2.RealtimeChannel);

  @override
  List<_i2.RealtimeChannel> getChannels() => (super.noSuchMethod(
        Invocation.method(
          #getChannels,
          [],
        ),
        returnValue: <_i2.RealtimeChannel>[],
      ) as List<_i2.RealtimeChannel>);

  @override
  _i3.Future<String> removeChannel(_i2.RealtimeChannel? channel) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeChannel,
          [channel],
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #removeChannel,
            [channel],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<List<String>> removeAllChannels() => (super.noSuchMethod(
        Invocation.method(
          #removeAllChannels,
          [],
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);

  @override
  _i3.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [PostgrestClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostgrestClient extends _i1.Mock implements _i2.PostgrestClient {
  MockPostgrestClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get url => (super.noSuchMethod(
        Invocation.getter(#url),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#url),
        ),
      ) as String);

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  _i2.PostgrestClient auth(String? token) => (super.noSuchMethod(
        Invocation.method(
          #auth,
          [token],
        ),
        returnValue: _FakePostgrestClient_3(
          this,
          Invocation.method(
            #auth,
            [token],
          ),
        ),
      ) as _i2.PostgrestClient);

  @override
  _i2.PostgrestClient setAuth(String? token) => (super.noSuchMethod(
        Invocation.method(
          #setAuth,
          [token],
        ),
        returnValue: _FakePostgrestClient_3(
          this,
          Invocation.method(
            #setAuth,
            [token],
          ),
        ),
      ) as _i2.PostgrestClient);

  @override
  _i2.PostgrestQueryBuilder<void> from(String? table) => (super.noSuchMethod(
        Invocation.method(
          #from,
          [table],
        ),
        returnValue: _FakePostgrestQueryBuilder_9<void>(
          this,
          Invocation.method(
            #from,
            [table],
          ),
        ),
      ) as _i2.PostgrestQueryBuilder<void>);

  @override
  _i2.PostgrestClient schema(String? schema) => (super.noSuchMethod(
        Invocation.method(
          #schema,
          [schema],
        ),
        returnValue: _FakePostgrestClient_3(
          this,
          Invocation.method(
            #schema,
            [schema],
          ),
        ),
      ) as _i2.PostgrestClient);

  @override
  _i2.PostgrestFilterBuilder<T> rpc<T>(
    String? fn, {
    Map<dynamic, dynamic>? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rpc,
          [fn],
          {#params: params},
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #rpc,
            [fn],
            {#params: params},
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i3.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [PostgrestFilterBuilder].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostgrestFilterBuilder<T> extends _i1.Mock
    implements _i2.PostgrestFilterBuilder<T> {
  MockPostgrestFilterBuilder() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PostgrestFilterBuilder<T> copyWithUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #copyWithUrl,
          [url],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #copyWithUrl,
            [url],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> not(
    String? column,
    String? operator,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #not,
          [
            column,
            operator,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #not,
            [
              column,
              operator,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> or(
    String? filters, {
    String? referencedTable,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #or,
          [filters],
          {#referencedTable: referencedTable},
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #or,
            [filters],
            {#referencedTable: referencedTable},
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> eq(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #eq,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #eq,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> neq(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #neq,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #neq,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> gt(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #gt,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #gt,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> gte(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #gte,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #gte,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> lt(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #lt,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #lt,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> lte(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #lte,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #lte,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> like(
    String? column,
    String? pattern,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #like,
          [
            column,
            pattern,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #like,
            [
              column,
              pattern,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<dynamic> likeAllOf(
    String? column,
    List<String>? patterns,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #likeAllOf,
          [
            column,
            patterns,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<dynamic>(
          this,
          Invocation.method(
            #likeAllOf,
            [
              column,
              patterns,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<dynamic>);

  @override
  _i2.PostgrestFilterBuilder<dynamic> likeAnyOf(
    String? column,
    List<String>? patterns,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #likeAnyOf,
          [
            column,
            patterns,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<dynamic>(
          this,
          Invocation.method(
            #likeAnyOf,
            [
              column,
              patterns,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<dynamic>);

  @override
  _i2.PostgrestFilterBuilder<T> ilike(
    String? column,
    String? pattern,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #ilike,
          [
            column,
            pattern,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #ilike,
            [
              column,
              pattern,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<dynamic> ilikeAllOf(
    String? column,
    List<String>? patterns,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #ilikeAllOf,
          [
            column,
            patterns,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<dynamic>(
          this,
          Invocation.method(
            #ilikeAllOf,
            [
              column,
              patterns,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<dynamic>);

  @override
  _i2.PostgrestFilterBuilder<dynamic> ilikeAnyOf(
    String? column,
    List<String>? patterns,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #ilikeAnyOf,
          [
            column,
            patterns,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<dynamic>(
          this,
          Invocation.method(
            #ilikeAnyOf,
            [
              column,
              patterns,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<dynamic>);

  @override
  _i2.PostgrestFilterBuilder<T> isFilter(
    String? column,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isFilter,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #isFilter,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> inFilter(
    String? column,
    List<dynamic>? values,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #inFilter,
          [
            column,
            values,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #inFilter,
            [
              column,
              values,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> contains(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #contains,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #contains,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> containedBy(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #containedBy,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #containedBy,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> rangeLt(
    String? column,
    String? range,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #rangeLt,
          [
            column,
            range,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #rangeLt,
            [
              column,
              range,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> rangeGt(
    String? column,
    String? range,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #rangeGt,
          [
            column,
            range,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #rangeGt,
            [
              column,
              range,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> rangeGte(
    String? column,
    String? range,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #rangeGte,
          [
            column,
            range,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #rangeGte,
            [
              column,
              range,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> rangeLte(
    String? column,
    String? range,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #rangeLte,
          [
            column,
            range,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #rangeLte,
            [
              column,
              range,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> rangeAdjacent(
    String? column,
    String? range,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #rangeAdjacent,
          [
            column,
            range,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #rangeAdjacent,
            [
              column,
              range,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> overlaps(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #overlaps,
          [
            column,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #overlaps,
            [
              column,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> textSearch(
    String? column,
    String? query, {
    String? config,
    _i2.TextSearchType? type,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #textSearch,
          [
            column,
            query,
          ],
          {
            #config: config,
            #type: type,
          },
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #textSearch,
            [
              column,
              query,
            ],
            {
              #config: config,
              #type: type,
            },
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> filter(
    String? column,
    String? operator,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #filter,
          [
            column,
            operator,
            value,
          ],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #filter,
            [
              column,
              operator,
              value,
            ],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> match(Map<String, Object>? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #match,
          [query],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #match,
            [query],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestTransformBuilder<List<Map<String, dynamic>>> select(
          [String? columns = '*']) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [columns],
        ),
        returnValue:
            _FakePostgrestTransformBuilder_10<List<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #select,
            [columns],
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<List<Map<String, dynamic>>>);

  @override
  _i2.PostgrestTransformBuilder<T> order(
    String? column, {
    bool? ascending = false,
    bool? nullsFirst = false,
    String? referencedTable,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #order,
          [column],
          {
            #ascending: ascending,
            #nullsFirst: nullsFirst,
            #referencedTable: referencedTable,
          },
        ),
        returnValue: _FakePostgrestTransformBuilder_10<T>(
          this,
          Invocation.method(
            #order,
            [column],
            {
              #ascending: ascending,
              #nullsFirst: nullsFirst,
              #referencedTable: referencedTable,
            },
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<T>);

  @override
  _i2.PostgrestTransformBuilder<T> limit(
    int? count, {
    String? referencedTable,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #limit,
          [count],
          {#referencedTable: referencedTable},
        ),
        returnValue: _FakePostgrestTransformBuilder_10<T>(
          this,
          Invocation.method(
            #limit,
            [count],
            {#referencedTable: referencedTable},
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<T>);

  @override
  _i2.PostgrestTransformBuilder<T> range(
    int? from,
    int? to, {
    String? referencedTable,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #range,
          [
            from,
            to,
          ],
          {#referencedTable: referencedTable},
        ),
        returnValue: _FakePostgrestTransformBuilder_10<T>(
          this,
          Invocation.method(
            #range,
            [
              from,
              to,
            ],
            {#referencedTable: referencedTable},
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<T>);

  @override
  _i2.PostgrestTransformBuilder<Map<String, dynamic>> single() =>
      (super.noSuchMethod(
        Invocation.method(
          #single,
          [],
        ),
        returnValue: _FakePostgrestTransformBuilder_10<Map<String, dynamic>>(
          this,
          Invocation.method(
            #single,
            [],
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<Map<String, dynamic>>);

  @override
  _i2.PostgrestTransformBuilder<Map<String, dynamic>?> maybeSingle() =>
      (super.noSuchMethod(
        Invocation.method(
          #maybeSingle,
          [],
        ),
        returnValue: _FakePostgrestTransformBuilder_10<Map<String, dynamic>?>(
          this,
          Invocation.method(
            #maybeSingle,
            [],
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<Map<String, dynamic>?>);

  @override
  _i2.PostgrestTransformBuilder<String> csv() => (super.noSuchMethod(
        Invocation.method(
          #csv,
          [],
        ),
        returnValue: _FakePostgrestTransformBuilder_10<String>(
          this,
          Invocation.method(
            #csv,
            [],
          ),
        ),
      ) as _i2.PostgrestTransformBuilder<String>);

  @override
  _i2.ResponsePostgrestBuilder<_i2.PostgrestResponse<T>, T, T> count(
          [_i2.CountOption? count = _i2.CountOption.exact]) =>
      (super.noSuchMethod(
        Invocation.method(
          #count,
          [count],
        ),
        returnValue:
            _FakeResponsePostgrestBuilder_11<_i2.PostgrestResponse<T>, T, T>(
          this,
          Invocation.method(
            #count,
            [count],
          ),
        ),
      ) as _i2.ResponsePostgrestBuilder<_i2.PostgrestResponse<T>, T, T>);

  @override
  _i2.PostgrestBuilder<void, void, void> head() => (super.noSuchMethod(
        Invocation.method(
          #head,
          [],
        ),
        returnValue: _FakePostgrestBuilder_12<void, void, void>(
          this,
          Invocation.method(
            #head,
            [],
          ),
        ),
      ) as _i2.PostgrestBuilder<void, void, void>);

  @override
  _i2.ResponsePostgrestBuilder<Map<String, dynamic>,
          Map<String, dynamic>, Map<String, dynamic>>
      geojson() => (super.noSuchMethod(
            Invocation.method(
              #geojson,
              [],
            ),
            returnValue: _FakeResponsePostgrestBuilder_11<Map<String, dynamic>,
                Map<String, dynamic>, Map<String, dynamic>>(
              this,
              Invocation.method(
                #geojson,
                [],
              ),
            ),
          ) as _i2.ResponsePostgrestBuilder<Map<String, dynamic>,
              Map<String, dynamic>, Map<String, dynamic>>);

  @override
  _i2.PostgrestBuilder<String, String, String> explain({
    bool? analyze = false,
    bool? verbose = false,
    bool? settings = false,
    bool? buffers = false,
    bool? wal = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #explain,
          [],
          {
            #analyze: analyze,
            #verbose: verbose,
            #settings: settings,
            #buffers: buffers,
            #wal: wal,
          },
        ),
        returnValue: _FakePostgrestBuilder_12<String, String, String>(
          this,
          Invocation.method(
            #explain,
            [],
            {
              #analyze: analyze,
              #verbose: verbose,
              #settings: settings,
              #buffers: buffers,
              #wal: wal,
            },
          ),
        ),
      ) as _i2.PostgrestBuilder<String, String, String>);

  @override
  _i2.PostgrestBuilder<U, U, T> withConverter<U>(
          _i2.PostgrestConverter<U, T>? converter) =>
      (super.noSuchMethod(
        Invocation.method(
          #withConverter,
          [converter],
        ),
        returnValue: _FakePostgrestBuilder_12<U, U, T>(
          this,
          Invocation.method(
            #withConverter,
            [converter],
          ),
        ),
      ) as _i2.PostgrestBuilder<U, U, T>);

  @override
  Uri appendSearchParams(
    String? key,
    String? value, [
    Uri? url,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #appendSearchParams,
          [
            key,
            value,
            url,
          ],
        ),
        returnValue: _FakeUri_13(
          this,
          Invocation.method(
            #appendSearchParams,
            [
              key,
              value,
              url,
            ],
          ),
        ),
      ) as Uri);

  @override
  Uri overrideSearchParams(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #overrideSearchParams,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeUri_13(
          this,
          Invocation.method(
            #overrideSearchParams,
            [
              key,
              value,
            ],
          ),
        ),
      ) as Uri);

  @override
  _i3.Stream<T> asStream() => (super.noSuchMethod(
        Invocation.method(
          #asStream,
          [],
        ),
        returnValue: _i3.Stream<T>.empty(),
      ) as _i3.Stream<T>);

  @override
  _i3.Future<T> catchError(
    Function? onError, {
    bool Function(Object)? test,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #catchError,
          [onError],
          {#test: test},
        ),
        returnValue: _i4.ifNotNull(
              _i4.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #catchError,
                  [onError],
                  {#test: test},
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_14<T>(
              this,
              Invocation.method(
                #catchError,
                [onError],
                {#test: test},
              ),
            ),
      ) as _i3.Future<T>);

  @override
  _i3.Future<U> then<U>(
    _i3.FutureOr<U> Function(T)? onValue, {
    Function? onError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #then,
          [onValue],
          {#onError: onError},
        ),
        returnValue: _i4.ifNotNull(
              _i4.dummyValueOrNull<U>(
                this,
                Invocation.method(
                  #then,
                  [onValue],
                  {#onError: onError},
                ),
              ),
              (U v) => _i3.Future<U>.value(v),
            ) ??
            _FakeFuture_14<U>(
              this,
              Invocation.method(
                #then,
                [onValue],
                {#onError: onError},
              ),
            ),
      ) as _i3.Future<U>);

  @override
  _i3.Future<T> timeout(
    Duration? timeLimit, {
    _i3.FutureOr<T> Function()? onTimeout,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #timeout,
          [timeLimit],
          {#onTimeout: onTimeout},
        ),
        returnValue: _i4.ifNotNull(
              _i4.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #timeout,
                  [timeLimit],
                  {#onTimeout: onTimeout},
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_14<T>(
              this,
              Invocation.method(
                #timeout,
                [timeLimit],
                {#onTimeout: onTimeout},
              ),
            ),
      ) as _i3.Future<T>);

  @override
  _i3.Future<T> whenComplete(_i3.FutureOr<void> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #whenComplete,
          [action],
        ),
        returnValue: _i4.ifNotNull(
              _i4.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #whenComplete,
                  [action],
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_14<T>(
              this,
              Invocation.method(
                #whenComplete,
                [action],
              ),
            ),
      ) as _i3.Future<T>);
}

/// A class which mocks [PostgrestQueryBuilder].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostgrestQueryBuilder<T> extends _i1.Mock
    implements _i2.PostgrestQueryBuilder<T> {
  MockPostgrestQueryBuilder() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PostgrestFilterBuilder<List<Map<String, dynamic>>> select(
          [String? columns = '*']) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [columns],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<List<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #select,
            [columns],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<List<Map<String, dynamic>>>);

  @override
  _i2.PostgrestFilterBuilder<T> insert(
    Object? values, {
    bool? defaultToNull = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #insert,
          [values],
          {#defaultToNull: defaultToNull},
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #insert,
            [values],
            {#defaultToNull: defaultToNull},
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> upsert(
    Object? values, {
    String? onConflict,
    bool? ignoreDuplicates = false,
    bool? defaultToNull = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #upsert,
          [values],
          {
            #onConflict: onConflict,
            #ignoreDuplicates: ignoreDuplicates,
            #defaultToNull: defaultToNull,
          },
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #upsert,
            [values],
            {
              #onConflict: onConflict,
              #ignoreDuplicates: ignoreDuplicates,
              #defaultToNull: defaultToNull,
            },
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> update(Map<dynamic, dynamic>? values) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [values],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #update,
            [values],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<T> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<T>(
          this,
          Invocation.method(
            #delete,
            [],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.PostgrestFilterBuilder<int> count(
          [_i2.CountOption? option = _i2.CountOption.exact]) =>
      (super.noSuchMethod(
        Invocation.method(
          #count,
          [option],
        ),
        returnValue: _FakePostgrestFilterBuilder_7<int>(
          this,
          Invocation.method(
            #count,
            [option],
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<int>);

  @override
  _i2.PostgrestBuilder<U, U, T> withConverter<U>(
          _i2.PostgrestConverter<U, T>? converter) =>
      (super.noSuchMethod(
        Invocation.method(
          #withConverter,
          [converter],
        ),
        returnValue: _FakePostgrestBuilder_12<U, U, T>(
          this,
          Invocation.method(
            #withConverter,
            [converter],
          ),
        ),
      ) as _i2.PostgrestBuilder<U, U, T>);

  @override
  Uri appendSearchParams(
    String? key,
    String? value, [
    Uri? url,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #appendSearchParams,
          [
            key,
            value,
            url,
          ],
        ),
        returnValue: _FakeUri_13(
          this,
          Invocation.method(
            #appendSearchParams,
            [
              key,
              value,
              url,
            ],
          ),
        ),
      ) as Uri);

  @override
  Uri overrideSearchParams(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #overrideSearchParams,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeUri_13(
          this,
          Invocation.method(
            #overrideSearchParams,
            [
              key,
              value,
            ],
          ),
        ),
      ) as Uri);

  @override
  _i3.Stream<T> asStream() => (super.noSuchMethod(
        Invocation.method(
          #asStream,
          [],
        ),
        returnValue: _i3.Stream<T>.empty(),
      ) as _i3.Stream<T>);

  @override
  _i3.Future<T> catchError(
    Function? onError, {
    bool Function(Object)? test,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #catchError,
          [onError],
          {#test: test},
        ),
        returnValue: _i4.ifNotNull(
              _i4.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #catchError,
                  [onError],
                  {#test: test},
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_14<T>(
              this,
              Invocation.method(
                #catchError,
                [onError],
                {#test: test},
              ),
            ),
      ) as _i3.Future<T>);

  @override
  _i3.Future<U> then<U>(
    _i3.FutureOr<U> Function(T)? onValue, {
    Function? onError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #then,
          [onValue],
          {#onError: onError},
        ),
        returnValue: _i4.ifNotNull(
              _i4.dummyValueOrNull<U>(
                this,
                Invocation.method(
                  #then,
                  [onValue],
                  {#onError: onError},
                ),
              ),
              (U v) => _i3.Future<U>.value(v),
            ) ??
            _FakeFuture_14<U>(
              this,
              Invocation.method(
                #then,
                [onValue],
                {#onError: onError},
              ),
            ),
      ) as _i3.Future<U>);

  @override
  _i3.Future<T> timeout(
    Duration? timeLimit, {
    _i3.FutureOr<T> Function()? onTimeout,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #timeout,
          [timeLimit],
          {#onTimeout: onTimeout},
        ),
        returnValue: _i4.ifNotNull(
              _i4.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #timeout,
                  [timeLimit],
                  {#onTimeout: onTimeout},
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_14<T>(
              this,
              Invocation.method(
                #timeout,
                [timeLimit],
                {#onTimeout: onTimeout},
              ),
            ),
      ) as _i3.Future<T>);

  @override
  _i3.Future<T> whenComplete(_i3.FutureOr<void> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #whenComplete,
          [action],
        ),
        returnValue: _i4.ifNotNull(
              _i4.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #whenComplete,
                  [action],
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_14<T>(
              this,
              Invocation.method(
                #whenComplete,
                [action],
              ),
            ),
      ) as _i3.Future<T>);
}

/// A class which mocks [PostgrestBuilder].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockPostgrestBuilder<T, S, R> extends _i1.Mock
    implements _i2.PostgrestBuilder<T, S, R> {
  MockPostgrestBuilder() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Uri appendSearchParams(
    String? key,
    String? value, [
    Uri? url,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #appendSearchParams,
          [
            key,
            value,
            url,
          ],
        ),
        returnValue: _FakeUri_13(
          this,
          Invocation.method(
            #appendSearchParams,
            [
              key,
              value,
              url,
            ],
          ),
        ),
      ) as Uri);

  @override
  Uri overrideSearchParams(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #overrideSearchParams,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeUri_13(
          this,
          Invocation.method(
            #overrideSearchParams,
            [
              key,
              value,
            ],
          ),
        ),
      ) as Uri);

  @override
  _i3.Stream<T> asStream() => (super.noSuchMethod(
        Invocation.method(
          #asStream,
          [],
        ),
        returnValue: _i3.Stream<T>.empty(),
      ) as _i3.Stream<T>);

  @override
  _i3.Future<T> catchError(
    Function? onError, {
    bool Function(Object)? test,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #catchError,
          [onError],
          {#test: test},
        ),
        returnValue: _i4.ifNotNull(
              _i4.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #catchError,
                  [onError],
                  {#test: test},
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_14<T>(
              this,
              Invocation.method(
                #catchError,
                [onError],
                {#test: test},
              ),
            ),
      ) as _i3.Future<T>);

  @override
  _i3.Future<U> then<U>(
    _i3.FutureOr<U> Function(T)? onValue, {
    Function? onError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #then,
          [onValue],
          {#onError: onError},
        ),
        returnValue: _i4.ifNotNull(
              _i4.dummyValueOrNull<U>(
                this,
                Invocation.method(
                  #then,
                  [onValue],
                  {#onError: onError},
                ),
              ),
              (U v) => _i3.Future<U>.value(v),
            ) ??
            _FakeFuture_14<U>(
              this,
              Invocation.method(
                #then,
                [onValue],
                {#onError: onError},
              ),
            ),
      ) as _i3.Future<U>);

  @override
  _i3.Future<T> timeout(
    Duration? timeLimit, {
    _i3.FutureOr<T> Function()? onTimeout,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #timeout,
          [timeLimit],
          {#onTimeout: onTimeout},
        ),
        returnValue: _i4.ifNotNull(
              _i4.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #timeout,
                  [timeLimit],
                  {#onTimeout: onTimeout},
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_14<T>(
              this,
              Invocation.method(
                #timeout,
                [timeLimit],
                {#onTimeout: onTimeout},
              ),
            ),
      ) as _i3.Future<T>);

  @override
  _i3.Future<T> whenComplete(_i3.FutureOr<void> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #whenComplete,
          [action],
        ),
        returnValue: _i4.ifNotNull(
              _i4.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #whenComplete,
                  [action],
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_14<T>(
              this,
              Invocation.method(
                #whenComplete,
                [action],
              ),
            ),
      ) as _i3.Future<T>);
}

/// A class which mocks [PostgrestResponse].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostgrestResponse<T> extends _i1.Mock
    implements _i2.PostgrestResponse<T> {
  MockPostgrestResponse() {
    _i1.throwOnMissingStub(this);
  }

  @override
  T get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: _i4.dummyValue<T>(
          this,
          Invocation.getter(#data),
        ),
      ) as T);

  @override
  int get count => (super.noSuchMethod(
        Invocation.getter(#count),
        returnValue: 0,
      ) as int);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [GoTrueClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoTrueClient extends _i1.Mock implements _i2.GoTrueClient {
  MockGoTrueClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GoTrueAdminApi get admin => (super.noSuchMethod(
        Invocation.getter(#admin),
        returnValue: _FakeGoTrueAdminApi_15(
          this,
          Invocation.getter(#admin),
        ),
      ) as _i2.GoTrueAdminApi);

  @override
  _i2.GoTrueMFAApi get mfa => (super.noSuchMethod(
        Invocation.getter(#mfa),
        returnValue: _FakeGoTrueMFAApi_16(
          this,
          Invocation.getter(#mfa),
        ),
      ) as _i2.GoTrueMFAApi);

  @override
  _i3.Stream<_i2.AuthState> get onAuthStateChange => (super.noSuchMethod(
        Invocation.getter(#onAuthStateChange),
        returnValue: _i3.Stream<_i2.AuthState>.empty(),
      ) as _i3.Stream<_i2.AuthState>);

  @override
  _i3.Stream<_i2.AuthState> get onAuthStateChangeSync => (super.noSuchMethod(
        Invocation.getter(#onAuthStateChangeSync),
        returnValue: _i3.Stream<_i2.AuthState>.empty(),
      ) as _i3.Stream<_i2.AuthState>);

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set admin(_i2.GoTrueAdminApi? _admin) => super.noSuchMethod(
        Invocation.setter(
          #admin,
          _admin,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set mfa(_i2.GoTrueMFAApi? _mfa) => super.noSuchMethod(
        Invocation.setter(
          #mfa,
          _mfa,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<_i2.AuthResponse> signInAnonymously({
    Map<String, dynamic>? data,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
          {
            #data: data,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i3.Future<_i2.AuthResponse>.value(_FakeAuthResponse_17(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
            {
              #data: data,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<_i2.AuthResponse> signUp({
    String? email,
    String? phone,
    required String? password,
    String? emailRedirectTo,
    Map<String, dynamic>? data,
    String? captchaToken,
    _i2.OtpChannel? channel = _i2.OtpChannel.sms,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [],
          {
            #email: email,
            #phone: phone,
            #password: password,
            #emailRedirectTo: emailRedirectTo,
            #data: data,
            #captchaToken: captchaToken,
            #channel: channel,
          },
        ),
        returnValue: _i3.Future<_i2.AuthResponse>.value(_FakeAuthResponse_17(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #email: email,
              #phone: phone,
              #password: password,
              #emailRedirectTo: emailRedirectTo,
              #data: data,
              #captchaToken: captchaToken,
              #channel: channel,
            },
          ),
        )),
      ) as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<_i2.AuthResponse> signInWithPassword({
    String? email,
    String? phone,
    required String? password,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPassword,
          [],
          {
            #email: email,
            #phone: phone,
            #password: password,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i3.Future<_i2.AuthResponse>.value(_FakeAuthResponse_17(
          this,
          Invocation.method(
            #signInWithPassword,
            [],
            {
              #email: email,
              #phone: phone,
              #password: password,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<_i2.OAuthResponse> getOAuthSignInUrl({
    required _i2.OAuthProvider? provider,
    String? redirectTo,
    String? scopes,
    Map<String, String>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOAuthSignInUrl,
          [],
          {
            #provider: provider,
            #redirectTo: redirectTo,
            #scopes: scopes,
            #queryParams: queryParams,
          },
        ),
        returnValue: _i3.Future<_i2.OAuthResponse>.value(_FakeOAuthResponse_18(
          this,
          Invocation.method(
            #getOAuthSignInUrl,
            [],
            {
              #provider: provider,
              #redirectTo: redirectTo,
              #scopes: scopes,
              #queryParams: queryParams,
            },
          ),
        )),
      ) as _i3.Future<_i2.OAuthResponse>);

  @override
  _i3.Future<_i2.AuthSessionUrlResponse> exchangeCodeForSession(
          String? authCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #exchangeCodeForSession,
          [authCode],
        ),
        returnValue: _i3.Future<_i2.AuthSessionUrlResponse>.value(
            _FakeAuthSessionUrlResponse_19(
          this,
          Invocation.method(
            #exchangeCodeForSession,
            [authCode],
          ),
        )),
      ) as _i3.Future<_i2.AuthSessionUrlResponse>);

  @override
  _i3.Future<_i2.AuthResponse> signInWithIdToken({
    required _i2.OAuthProvider? provider,
    required String? idToken,
    String? accessToken,
    String? nonce,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithIdToken,
          [],
          {
            #provider: provider,
            #idToken: idToken,
            #accessToken: accessToken,
            #nonce: nonce,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i3.Future<_i2.AuthResponse>.value(_FakeAuthResponse_17(
          this,
          Invocation.method(
            #signInWithIdToken,
            [],
            {
              #provider: provider,
              #idToken: idToken,
              #accessToken: accessToken,
              #nonce: nonce,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<void> signInWithOtp({
    String? email,
    String? phone,
    String? emailRedirectTo,
    bool? shouldCreateUser,
    Map<String, dynamic>? data,
    String? captchaToken,
    _i2.OtpChannel? channel = _i2.OtpChannel.sms,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithOtp,
          [],
          {
            #email: email,
            #phone: phone,
            #emailRedirectTo: emailRedirectTo,
            #shouldCreateUser: shouldCreateUser,
            #data: data,
            #captchaToken: captchaToken,
            #channel: channel,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i2.AuthResponse> verifyOTP({
    String? email,
    String? phone,
    String? token,
    required _i2.OtpType? type,
    String? redirectTo,
    String? captchaToken,
    String? tokenHash,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyOTP,
          [],
          {
            #email: email,
            #phone: phone,
            #token: token,
            #type: type,
            #redirectTo: redirectTo,
            #captchaToken: captchaToken,
            #tokenHash: tokenHash,
          },
        ),
        returnValue: _i3.Future<_i2.AuthResponse>.value(_FakeAuthResponse_17(
          this,
          Invocation.method(
            #verifyOTP,
            [],
            {
              #email: email,
              #phone: phone,
              #token: token,
              #type: type,
              #redirectTo: redirectTo,
              #captchaToken: captchaToken,
              #tokenHash: tokenHash,
            },
          ),
        )),
      ) as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<String> getSSOSignInUrl({
    String? providerId,
    String? domain,
    String? redirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSSOSignInUrl,
          [],
          {
            #providerId: providerId,
            #domain: domain,
            #redirectTo: redirectTo,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #getSSOSignInUrl,
            [],
            {
              #providerId: providerId,
              #domain: domain,
              #redirectTo: redirectTo,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<_i2.AuthResponse> refreshSession([String? refreshToken]) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshSession,
          [refreshToken],
        ),
        returnValue: _i3.Future<_i2.AuthResponse>.value(_FakeAuthResponse_17(
          this,
          Invocation.method(
            #refreshSession,
            [refreshToken],
          ),
        )),
      ) as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<void> reauthenticate() => (super.noSuchMethod(
        Invocation.method(
          #reauthenticate,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i2.ResendResponse> resend({
    String? email,
    String? phone,
    required _i2.OtpType? type,
    String? emailRedirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #resend,
          [],
          {
            #email: email,
            #phone: phone,
            #type: type,
            #emailRedirectTo: emailRedirectTo,
            #captchaToken: captchaToken,
          },
        ),
        returnValue:
            _i3.Future<_i2.ResendResponse>.value(_FakeResendResponse_20(
          this,
          Invocation.method(
            #resend,
            [],
            {
              #email: email,
              #phone: phone,
              #type: type,
              #emailRedirectTo: emailRedirectTo,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i3.Future<_i2.ResendResponse>);

  @override
  _i3.Future<_i2.UserResponse> getUser([String? jwt]) => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [jwt],
        ),
        returnValue: _i3.Future<_i2.UserResponse>.value(_FakeUserResponse_21(
          this,
          Invocation.method(
            #getUser,
            [jwt],
          ),
        )),
      ) as _i3.Future<_i2.UserResponse>);

  @override
  _i3.Future<_i2.UserResponse> updateUser(
    _i2.UserAttributes? attributes, {
    String? emailRedirectTo,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [attributes],
          {#emailRedirectTo: emailRedirectTo},
        ),
        returnValue: _i3.Future<_i2.UserResponse>.value(_FakeUserResponse_21(
          this,
          Invocation.method(
            #updateUser,
            [attributes],
            {#emailRedirectTo: emailRedirectTo},
          ),
        )),
      ) as _i3.Future<_i2.UserResponse>);

  @override
  _i3.Future<_i2.AuthResponse> setSession(String? refreshToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSession,
          [refreshToken],
        ),
        returnValue: _i3.Future<_i2.AuthResponse>.value(_FakeAuthResponse_17(
          this,
          Invocation.method(
            #setSession,
            [refreshToken],
          ),
        )),
      ) as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<_i2.AuthSessionUrlResponse> getSessionFromUrl(
    Uri? originUrl, {
    bool? storeSession = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSessionFromUrl,
          [originUrl],
          {#storeSession: storeSession},
        ),
        returnValue: _i3.Future<_i2.AuthSessionUrlResponse>.value(
            _FakeAuthSessionUrlResponse_19(
          this,
          Invocation.method(
            #getSessionFromUrl,
            [originUrl],
            {#storeSession: storeSession},
          ),
        )),
      ) as _i3.Future<_i2.AuthSessionUrlResponse>);

  @override
  _i3.Future<void> signOut(
          {_i2.SignOutScope? scope = _i2.SignOutScope.local}) =>
      (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
          {#scope: scope},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> resetPasswordForEmail(
    String? email, {
    String? redirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPasswordForEmail,
          [email],
          {
            #redirectTo: redirectTo,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i2.UserIdentity>> getUserIdentities() => (super.noSuchMethod(
        Invocation.method(
          #getUserIdentities,
          [],
        ),
        returnValue:
            _i3.Future<List<_i2.UserIdentity>>.value(<_i2.UserIdentity>[]),
      ) as _i3.Future<List<_i2.UserIdentity>>);

  @override
  _i3.Future<_i2.OAuthResponse> getLinkIdentityUrl(
    _i2.OAuthProvider? provider, {
    String? redirectTo,
    String? scopes,
    Map<String, String>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLinkIdentityUrl,
          [provider],
          {
            #redirectTo: redirectTo,
            #scopes: scopes,
            #queryParams: queryParams,
          },
        ),
        returnValue: _i3.Future<_i2.OAuthResponse>.value(_FakeOAuthResponse_18(
          this,
          Invocation.method(
            #getLinkIdentityUrl,
            [provider],
            {
              #redirectTo: redirectTo,
              #scopes: scopes,
              #queryParams: queryParams,
            },
          ),
        )),
      ) as _i3.Future<_i2.OAuthResponse>);

  @override
  _i3.Future<void> unlinkIdentity(_i2.UserIdentity? identity) =>
      (super.noSuchMethod(
        Invocation.method(
          #unlinkIdentity,
          [identity],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setInitialSession(String? jsonStr) => (super.noSuchMethod(
        Invocation.method(
          #setInitialSession,
          [jsonStr],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i2.AuthResponse> recoverSession(String? jsonStr) =>
      (super.noSuchMethod(
        Invocation.method(
          #recoverSession,
          [jsonStr],
        ),
        returnValue: _i3.Future<_i2.AuthResponse>.value(_FakeAuthResponse_17(
          this,
          Invocation.method(
            #recoverSession,
            [jsonStr],
          ),
        )),
      ) as _i3.Future<_i2.AuthResponse>);

  @override
  void startAutoRefresh() => super.noSuchMethod(
        Invocation.method(
          #startAutoRefresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void stopAutoRefresh() => super.noSuchMethod(
        Invocation.method(
          #stopAutoRefresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyAllSubscribers(_i2.AuthChangeEvent? event) => super.noSuchMethod(
        Invocation.method(
          #notifyAllSubscribers,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  Object notifyException(
    Object? exception, [
    StackTrace? stackTrace,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #notifyException,
          [
            exception,
            stackTrace,
          ],
        ),
        returnValue: _FakeObject_22(
          this,
          Invocation.method(
            #notifyException,
            [
              exception,
              stackTrace,
            ],
          ),
        ),
      ) as Object);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i2.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  Map<String, dynamic> get appMetadata => (super.noSuchMethod(
        Invocation.getter(#appMetadata),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  String get aud => (super.noSuchMethod(
        Invocation.getter(#aud),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#aud),
        ),
      ) as String);

  @override
  String get createdAt => (super.noSuchMethod(
        Invocation.getter(#createdAt),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#createdAt),
        ),
      ) as String);

  @override
  bool get isAnonymous => (super.noSuchMethod(
        Invocation.getter(#isAnonymous),
        returnValue: false,
      ) as bool);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [Session].
///
/// See the documentation for Mockito's code generation for more information.
class MockSession extends _i1.Mock implements _i2.Session {
  MockSession() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get accessToken => (super.noSuchMethod(
        Invocation.getter(#accessToken),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#accessToken),
        ),
      ) as String);

  @override
  String get tokenType => (super.noSuchMethod(
        Invocation.getter(#tokenType),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#tokenType),
        ),
      ) as String);

  @override
  _i2.User get user => (super.noSuchMethod(
        Invocation.getter(#user),
        returnValue: _FakeUser_23(
          this,
          Invocation.getter(#user),
        ),
      ) as _i2.User);

  @override
  bool get isExpired => (super.noSuchMethod(
        Invocation.getter(#isExpired),
        returnValue: false,
      ) as bool);

  @override
  set expiresAt(int? _expiresAt) => super.noSuchMethod(
        Invocation.setter(
          #expiresAt,
          _expiresAt,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i2.Session copyWith({
    String? accessToken,
    int? expiresIn,
    String? refreshToken,
    String? tokenType,
    String? providerToken,
    String? providerRefreshToken,
    _i2.User? user,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #accessToken: accessToken,
            #expiresIn: expiresIn,
            #refreshToken: refreshToken,
            #tokenType: tokenType,
            #providerToken: providerToken,
            #providerRefreshToken: providerRefreshToken,
            #user: user,
          },
        ),
        returnValue: _FakeSession_24(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #accessToken: accessToken,
              #expiresIn: expiresIn,
              #refreshToken: refreshToken,
              #tokenType: tokenType,
              #providerToken: providerToken,
              #providerRefreshToken: providerRefreshToken,
              #user: user,
            },
          ),
        ),
      ) as _i2.Session);
}
