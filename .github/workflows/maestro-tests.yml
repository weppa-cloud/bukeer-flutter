name: Maestro E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: false
        default: 'smoke'
        type: choice
        options:
          - smoke
          - regression
          - critical
          - all

env:
  MAESTRO_VERSION: 'latest'
  FLUTTER_VERSION: '3.19.0'

jobs:
  maestro-tests:
    runs-on: macos-latest
    timeout-minutes: 30
    
    strategy:
      matrix:
        include:
          - device: "iPhone 15"
            os_version: "17.0"
          - device: "iPhone 14"
            os_version: "16.0"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          
      - name: Install dependencies
        run: |
          flutter pub get
          flutter doctor -v
          
      - name: Build iOS app
        run: |
          flutter build ios --debug --simulator
          
      - name: Install Maestro CLI
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH
          
      - name: Setup iOS Simulator
        run: |
          xcrun simctl create "test-device" "${{ matrix.device }}" "iOS${{ matrix.os_version }}"
          xcrun simctl boot "test-device"
          xcrun simctl install "test-device" build/ios/iphonesimulator/Runner.app
          
      - name: Create .env.maestro
        run: |
          cat > maestro/.env.maestro << EOF
          TEST_EMAIL=${{ secrets.TEST_EMAIL }}
          TEST_PASSWORD=${{ secrets.TEST_PASSWORD }}
          TEST_EMAIL_2=${{ secrets.TEST_EMAIL_2 }}
          TEST_PASSWORD_2=${{ secrets.TEST_PASSWORD_2 }}
          ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
          TEST_BASE_URL=${{ secrets.TEST_BASE_URL }}
          EOF
          
      - name: Run Maestro tests
        run: |
          cd maestro
          if [ "${{ github.event.inputs.test_suite }}" == "all" ] || [ -z "${{ github.event.inputs.test_suite }}" ]; then
            maestro test --video --video-quality=medium flows/
          else
            maestro test --video --video-quality=medium --tags=${{ github.event.inputs.test_suite }} flows/
          fi
        env:
          MAESTRO_DRIVER_STARTUP_TIMEOUT: 60000
          MAESTRO_VIDEO_ON_FAILURE: true
          MAESTRO_VIDEO_ON_SUCCESS: false
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: maestro-results-${{ matrix.device }}-${{ matrix.os_version }}
          path: |
            maestro/test-results/
            maestro/screenshots/
            maestro/.maestro/tests/
            maestro/.maestro/**/*.mp4
            maestro/recordings/
            
      - name: Upload screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: failure-screenshots-${{ matrix.device }}-${{ matrix.os_version }}
          path: maestro/screenshots/
          
      - name: Cleanup
        if: always()
        run: |
          xcrun simctl shutdown "test-device" || true
          xcrun simctl delete "test-device" || true
          
  maestro-web-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          
      - name: Install dependencies
        run: |
          flutter pub get
          flutter doctor -v
          
      - name: Build web app
        run: flutter build web
        
      - name: Start web server
        run: |
          cd build/web
          python3 -m http.server 3000 &
          sleep 5
          
      - name: Install Maestro CLI
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH
          
      - name: Install Chrome
        uses: browser-actions/setup-chrome@latest
        
      - name: Create .env.maestro
        run: |
          cat > maestro/.env.maestro << EOF
          TEST_EMAIL=${{ secrets.TEST_EMAIL }}
          TEST_PASSWORD=${{ secrets.TEST_PASSWORD }}
          TEST_BASE_URL=http://localhost:3000
          EOF
          
      - name: Run Maestro web tests
        run: |
          cd maestro
          maestro test --platform=web --browser=chrome flows/
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: maestro-web-results
          path: |
            maestro/test-results/
            maestro/screenshots/
            
  notify-results:
    needs: [maestro-tests, maestro-web-tests]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Send Slack notification
        if: ${{ secrets.SLACK_WEBHOOK_URL }}
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            Maestro E2E Tests ${{ job.status }}
            Workflow: ${{ github.workflow }}
            Branch: ${{ github.ref }}
            Commit: ${{ github.sha }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ needs.maestro-tests.result }}' === 'success' && '${{ needs.maestro-web-tests.result }}' === 'success' ? '✅' : '❌';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Maestro E2E Test Results ${status}
              
              - Mobile Tests: ${{ needs.maestro-tests.result }}
              - Web Tests: ${{ needs.maestro-web-tests.result }}
              
              [View full results](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})`
            });